[{"/Users/inesalmeida/Sites/personal-website/src/index.js":"1","/Users/inesalmeida/Sites/personal-website/src/App.js":"2","/Users/inesalmeida/Sites/personal-website/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610751228460,"results":"4","hashOfConfig":"5"},{"size":14782,"mtime":1611091852515,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610751228462,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"3rqe0c",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/inesalmeida/Sites/personal-website/src/index.js",[],["16","17"],"/Users/inesalmeida/Sites/personal-website/src/App.js",["18","19"],"import './sass/main.scss';\nimport moment from 'moment';\nimport React, { useState } from \"react\";\n\nconst tag_color = {\n  Code: '#386FA4',\n  Paper: '#DE7254',\n  Misc: '#67a286',\n}\n\nfunction BackToTheTop() {\n  return <li className='back-to-the-top hidden' id='back-to-the-top'><a href='#header' /></li>\n}\n\nfunction NavBar({ items }) {\n  let links = Object.keys(items).reverse().map((key, i) => <li key={i} className=\"navbar__item\"><a href={items[key]}>{key}</a></li>);\n\n  return (<ul className=\"navbar\">\n    {links}\n    <BackToTheTop />\n  </ul>)\n}\n\nfunction SocialMedia({ keywork, icon, link }) {\n  return (\n    <div className=\"social__icon\">\n      <a href={link} target=\"_blank\" rel=\"noreferrer\">\n        <i className={icon} title={keywork} aria-label={\"Go to \" + keywork} />\n      </a>\n    </div>\n  )\n}\n\nfunction Header() {\n\n  let social_media = [\n    {\n      keywork: 'Email',\n      icon: 'fas fa-envelope-square',\n      link: 'mailto:contact@ines-almeida.com',\n    },\n    {\n      keywork: 'LinkedIn',\n      icon: 'fab fa-linkedin',\n      link: 'https://www.linkedin.com/in/ines-de-almeida/',\n    },\n    {\n      keywork: 'Github',\n      icon: 'fab fa-github',\n      link: 'https://github.com/ineesalmeida',\n    },\n    {\n      keywork: 'Google Scholar',\n      icon: 'fas fa-graduation-cap',\n      link: 'https://scholar.google.com/citations?user=MDKePnkAAAAJ&hl=en',\n    },\n    {\n      keywork: 'Instagram',\n      icon: 'fab fa-instagram',\n      link: 'https://www.instagram.com/inees_almeida/',\n    },\n    {\n      keywork: 'CV',\n      icon: 'fas fa-file-alt',\n      link: './cv/index.html',\n    },\n  ]\n\n  return (\n    <div className='container' id='header'>\n      <div className='container__content'>\n        <div className='header'>\n          <img src={process.env.PUBLIC_URL + '/me.jpg'} className=\"header__picture\" />\n          <div className=\"header__text\">\n            <h1>Inês</h1><h1> Almeida</h1>\n            <br />\n            <h2>Software Engineer</h2><h2> | </h2><h2>Biomedical Engineer MSc</h2>\n            <br />\n            <div className=\"social tooltip\">\n              {social_media.map(s => <SocialMedia key={s.keywork} {...s} />)}\n              <span className=\"tooltiptext\">Email: contact@ines-almeida.com</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction About() {\n  return (\n    <div className='container' id='about'>\n      <div className='container__content'>\n        <div className='about-me'>\n          <div className='about-me__img'>\n            <img src=\"climbing.png\" alt=\"Climbing\" />\n          </div>\n          <p>\n            Hi,\n          </p>\n          <p>\n            I am Inês: I like <b>bouldering</b>, <b>programming</b>, <b>cooking</b>, and <b>graphic design</b> among other things. I'm also a <b>Software Engineer</b> with a Master's in <b>Biomedical Engineering and Biophysics</b>. I currently work as full-stack developer, which I quite enjoy.\n          </p>\n          <p>\n            I've lived in 6 different countries in Europe; I've published two neuroscience papers; I was president of a non-profit organisation for 2 years while in university; I built a video game to teach kids about a specific science topic.\n          </p>\n          <p>\n            My most recent project is building a <b>VR video-game in Unity (C#)</b> with my <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.diogo-cunha.com/\">best-friend and partner</a> in my free time, which has been a lot of fun.\n          </p>\n          <p>\n            Anyway: welcome to my personal website.\n          </p>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nfunction ProjectCard({ title, content, slug, link, keyword, date }) {\n\n  let _link = link ? <div className=\"projects__card__label projects__card__link\">Link</div> : null;\n\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\" className='projects__card' key={slug} >\n      <div className=\"projects__card__keywords\">\n        {_link}\n        <div className=\"projects__card__label\" style={{ backgroundColor: tag_color[keyword] }}>{keyword}</div>\n      </div>\n      <h3>{title}</h3>\n      <p style={{ fontStyle: \"italic\", color: \"LightSteelBlue\" }}>{date}</p>\n      <p>{content}</p>\n    </a >\n  )\n}\n\nfunction Projects() {\n  let projects = [\n    {\n      title: \"Hugo CV Template\",\n      slug: 'hugo',\n      date: \"2020\",\n      keyword: \"Code\",\n      link: \"https://github.com/ineesalmeida/almeida-cv\",\n      content: \"I built an open-source Hugo template for an online PDF printable CV. Well, I built it for myself when I had the need to create a beautiful, easy to edit from anywhere CV for myself; I then shared it because why not! It's not easy to know how many people have used it, but so far, its repo has been started 30 times and forked 16.\",\n    },\n    {\n      title: \"Is neural activity detected by ERP-based brain-computer interfaces task specific?\",\n      slug: 'paper2016',\n      date: \"2016\",\n      keyword: \"Paper\",\n      link: \"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0165556\",\n      content: \"I did a 2-month internship in Berlin at the Neurotechnology group of TU Berlin. This paper contains the results of that 2-month experiment.\",\n\n    },\n    {\n      title: \"Using machine learning to reveal the population vector from EEG signals\",\n      slug: 'paper2020',\n      date: \"2020\",\n      keyword: \"Paper\",\n      link: \"https://iopscience.iop.org/article/10.1088/1741-2552/ab7490/meta\",\n      content: \"For my Master's thesis, I researched using non-invasive brain signals to decode arm movement at the Institute of Neural Engineering in Graz (Austria). This paper was the result. I co-authored it with the PhD student that helped me with everything along the way.\",\n    },\n    {\n      title: \"Who you talk to\",\n      slug: 'paper3',\n      date: \"2019\",\n      keyword: \"Code\",\n      style: {\n        backgroundColor: 'rgba(white, 0.5)',\n      },\n      content: \"I had a question in mind: who are the friends I talk to the most in my Facebook chat? When do we talk the most? What were the words that were most specific to each friend? To answer that, I created an offline python tool that did all that processing from the information downloaded from the website. The results were quite fun to explore!\",\n    },\n    {\n      title: \"Aussie BBQ Survival\",\n      slug: 'vrgame',\n      date: \"On going\",\n      keyword: \"Code\",\n      link: null,\n      content: \"Me and my partner's latest project: to build a VR video game from scratch! We're using Unity (C#) and blender, and learning a bunch. We've been building it in our free time for a while now. We plan to release it by the end of 2021.\",\n    },\n    {\n      title: \"Cell by Cell\",\n      slug: 'flowgame',\n      date: \"2018\",\n      keyword: \"Code\",\n      link: \"http://facilities.igc.gulbenkian.pt/flowcytometry/cell_by_cell_web/index.html\",\n      content: \"While working at a research lab as a Flow Cytometry technician, I was given the challenge to create something to teach children and their parents about a science instrument - cell sorting. The result was a video game built in Unity where the player was sorting cells by their color. Unfortunately, I didn't have the time to polish it and add a tutorial to users. Before and while playing, we introduced some more scientific concepts.\",\n    },\n    {\n      title: \"Warm Sweater\",\n      slug: 'sweater',\n      date: \"2020\",\n      keyword: \"Misc\",\n      link: null,\n      content: \"I knitted a large warm sweater for my best-friend and partner. It took 55 hours and 700 meters of wool. I'm very proud of it :)\",\n    },\n    {\n      title: \"Personal website\",\n      slug: 'personal-website',\n      date: \"2021\",\n      keyword: \"Code\",\n      link: null,\n      content: \"Small weekend project that has still a bunch of features to add. I like to take these chances to explore new tools and practice. I used sass, flexbox, CSS animations and React.\"\n    },\n    {\n      title: \"Virtual Library\",\n      slug: 'flask-lib',\n      date: \"2019\",\n      keyword: \"Code\",\n      link: null,\n      content: \"My mum was getting lost in all her thousands of books, and wanted to go through each and note down where it was. For her birthday, I created a DB with a nice front-end made in Flask and Material where she could, add, edit, query or remove book registries, and import and export them as CSVs to open in Excel.\",\n    },\n  ]\n\n  let project_cards = projects.sort((a, b) => (a.date > b.date) ? -1 : 1).map((props) => <ProjectCard key={props.slug} {...props} />);\n\n  return (\n    <div className='container' id='projects'>\n      <div className='container__content'>\n        <h1>Some of my Projects</h1>\n        <div className='projects'>\n          <div className='projects__cards_container'>\n            {project_cards}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction TimelineBar({ first_year, job_bars, bar_height, bar_start }) {\n\n  let sub_bars = job_bars.map((bar) => {\n    return <div className=\"work__timeline__subbar\" style={{ height: bar[0] + \"%\", bottom: bar[1] + \"%\" }} />\n  });\n\n  return (\n    <div className=\"work__timeline\">\n      <p className=\"work__timeline__now\">Now</p>\n      <p className=\"work__timeline__start\">{first_year}</p>\n      {sub_bars}\n      <div className=\"work__timeline__bar\" style={{ height: bar_height + \"%\", bottom: bar_start + \"%\" }} />\n    </div>\n  )\n}\n\n\nfunction Work() {\n\n  let jobs = [\n    {\n      'title': 'Software Engineer',\n      'company': 'Perspectum',\n      'place': 'Oxford, UK',\n      'from': \"01-2020\",\n      'to': null,\n      'description': \"I work mainly as a full-stack developer of a Django web portal with multiple integrated services. I also do some team work management, communication with stakeholders, and create individual python packages and tools to be used by other teams.\",\n      'slug': 'persp-swe'\n    },\n    {\n      'title': 'Test Engineer',\n      'company': 'Perspectum',\n      'place': 'Oxford, UK',\n      'from': \"03-2019\",\n      'to': \"01-2020\",\n      'description': 'Wrote BDD automated tests for a Django web portal using web scrapping tools. Created a few load tests that run hundreads of scenarios in parallel to test the portal robustness.',\n      'slug': 'persp-sqa'\n    },\n    {\n      'title': 'Flow Cytometry Technician',\n      'company': 'Instituto Gulbenkian de Ciência',\n      'place': 'Oeiras, PT',\n      'from': \"01-2018\",\n      'to': \"03-2019\",\n      'description': \"Worked in maintaining a lab unit and teaching users how to use our tools. While in working there, I ended up re-working some of the institute's facilities websites, automatizing report creation in Python, and creating a video game to teach kids what we do in the lab. I ended up moving to a more software-oriented occupation after that since the software-related tasks were the most fun.\",\n      'slug': 'igc-flow'\n    },\n    {\n      'title': \"Master's in Biomedical Engineering\",\n      'company': 'Faculdade de Ciências da Universidade de Lisboa',\n      'place': 'Lisbon, PT',\n      'from': \"09-2015\",\n      'to': \"11-2017\",\n      'description': \"\",\n      'slug': 'masters'\n    },\n    {\n      'title': \"Master's Thesis Research Intern\",\n      'company': 'Institute of Neural Engineering',\n      'place': 'Graz, AT',\n      'from': \"09-2016\",\n      'to': \"06-2017\",\n      'description': \"Designed and developed an experimental paradigm, and acquired and analysed data from brain signals while people moved their arm in a controlled environment. The results were then published in my Master's thesis and later worked into a paper released in 2020.\",\n      'slug': 'master-intern'\n    },\n    {\n      'title': 'Research Intern',\n      'company': 'Institute of Neural Engineering',\n      'place': 'Berlin, DE',\n      'from': \"06-2015\",\n      'to': \"09-2015\",\n      'description': \"At the end of my Bachelor's degree, I did this small neuroscience internship. I designed and conducted an experiment (with a lot of help from a PhD student). In the end, I wrote my Bachelor's thesis and a paper with the contents\",\n      'slug': 'bachelor-intern'\n    }\n  ];\n\n  const [barHeight, setbarHeight] = useState(0);\n  const [barStart, setBarStart] = useState(0);\n\n  function changebarHeight(event) {\n    setBarStart(event.target.getAttribute('data-barstart') || event.target.parentElement.getAttribute('data-barstart'));\n\n    setbarHeight(event.target.getAttribute('data-barheight') || event.target.parentElement.getAttribute('data-barheight'));\n  }\n\n  let first_date = moment();\n  jobs.forEach(job => {\n    let _to_moment = job.to ? moment(job.to, \"MM-YYYY\") : moment();\n    let _from_moment = moment(job.from, \"MM-YYYY\");\n    let _duration = _to_moment.diff(_from_moment, 'months');\n    job['from'] = _from_moment.format(\"MMM YYYY\");\n    job['to'] = job.to ? _to_moment.format(\"MMM YYYY\") : \"Now\";\n    job['_from'] = _from_moment;\n    job['_to'] = _to_moment;\n    job['date'] = _duration === 0 ? job.from : job.from + \"-\" + job.to;\n    job['duration'] = _duration === 0 ? 1 : _duration;\n\n    if (first_date.diff(_from_moment) > 0) {\n      first_date = _from_moment;\n    }\n  })\n  let time_span = moment().diff(first_date, \"months\");\n  jobs.forEach(job => {\n    job['bar_start'] = 100 * job._from.diff(first_date, \"months\") / time_span;\n    job['bar_height'] = 100 * job.duration / time_span;\n  })\n\n  let job_bars = jobs.map(job => [job.bar_height, job.bar_start]);\n\n  return (\n    <div className='container' id='work'>\n      <div className='container__content'>\n        <h1>My career so far</h1>\n        <div className='work'>\n          <TimelineBar first_year={first_date.format('YYYY')} job_bars={job_bars} bar_height={barHeight} bar_start={barStart} />\n          <div className=\"work__items\" >\n            {jobs.map((job) => {\n              return (\n                <div className=\"work__item\" key={job.slug} data-key={job.slug} onMouseEnter={changebarHeight.bind(this)} onTouchStart={changebarHeight.bind(this)}\n                  onClick={changebarHeight.bind(this)} data-barstart={job.bar_start} data-barheight={job.bar_height}>\n                  <p className=\"work__item__place\"><i className=\"fa fa-map-marker-alt\" aria-hidden=\"true\" />  {job.place}</p>\n                  <h2>{job.title}</h2>\n                  <h3>{job.company}</h3>\n                  <p className=\"work__item__date\">{job.date}</p>\n                  <p>{job.description}</p>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"vignete-top\" />\n      <NavBar items={{ About: '#about', Projects: '#projects', Work: '#work' }} />\n      <Header />\n      <About />\n      <Projects />\n      <Work />\n      <div className=\"vignete-bottom\" />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/inesalmeida/Sites/personal-website/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":12,"column":70,"nodeType":"26","endLine":12,"endColumn":90},{"ruleId":"27","severity":1,"message":"28","line":73,"column":11,"nodeType":"26","endLine":73,"endColumn":87},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]